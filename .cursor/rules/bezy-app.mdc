---
description: Bezy app main rules and best practices
globs: src/** ai_context/**
alwaysApply: false
---
# Bezy Rules

## Overview

Bezy is a font editing application writen in Rust and Bevy.

It is designed to have a simple readable codebase, that junior programmers, type designers, frontend engineers, and LLMs can easily understand and work with.

It should be suitable for education, students learning how font editors work should be able to learn from the codebase.

This software is designed and built in the modernist tradition. Less is more. Form follows function. Imagine if digital font editors existed at the height of the Swiss Internatinal Typographic Style or the early Bauhaus. 

It is a loose port of a previous font editor called Runebender, the major difference being that Runbender uses the Druid GUI framework and Bezy uses the Bevy ECS game engine.

Bezy is designed to feel like a video game, it should be fast, fun, and engaging to use, like being immersed in a uniqe world.

I am porting code from Runbender to Bezy, that means I am porting from Druid to Bevy. The Runebender and Bevy repos are in the ai_context directory for refrance when porting.

Bezy uses libraries from Runebender not directly related to Druid, like Norad, Kurbo, and Spline.

## Code Style

 I do not want I have any constants related to visual style declared outside of the theme.rs file. I am designing this application so that the theme.rs file can be swapped out and the visual style will be completly changed, there should be no visual constants outside the theme.re file




